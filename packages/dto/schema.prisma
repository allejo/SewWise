datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "src/generated/"
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Fabric {
  id             Int             @id @default(autoincrement())
  seller         Seller
  externalId     String
  url            String
  name           String
  description    String
  basePrice      Decimal
  brand          Brand           @relation(fields: [brandId], references: [id])
  brandId        Int
  category       FabricCategory  @relation(fields: [categoryId], references: [id])
  categoryId     Int
  tags           String[]
  imageUrl       String
  swatchImageUrl String
  colors         String[]
  variants       FabricVariant[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model FabricCategory {
  id          Int      @id @default(autoincrement())
  extenalId   String
  description String
  fabrics     Fabric[]
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fabrics   Fabric[]
}

model FabricVariant {
  id         Int           @id @default(autoincrement())
  externalId String
  fabric     Fabric        @relation(fields: [fabricId], references: [id])
  fabricId   Int
  name       String?
  url        String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  images     FabricImage[]
}

model FabricImage {
  id          Int           @id @default(autoincrement())
  variant     FabricVariant @relation(fields: [variantId], references: [id])
  variantId   Int
  originalUrl String
  filename    String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

enum Availability {
  IN_STOCK
  OUT_OF_STOCK
  RETIRED
}

enum Seller {
  Joaan
}
